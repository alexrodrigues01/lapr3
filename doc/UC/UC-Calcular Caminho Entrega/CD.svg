<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="507px" preserveAspectRatio="none" style="width:1876px;height:507px;" version="1.1" viewBox="0 0 1876 507" width="1876px" zoomAndPan="magnify"><defs><filter height="300%" id="f196nc5z98i1b7" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[31371b8e73ae67545104722d962f1de0]
class CaminhoTask--><rect codeLine="2" fill="#FEFECE" filter="url(#f196nc5z98i1b7)" height="158.6875" id="CaminhoTask" style="stroke:#A80036;stroke-width:1.5;" width="1325" x="512.5" y="7"/><ellipse cx="1131.75" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1133.75,19.5 Q1133.9531,19 1134.1875,18.75 Q1134.4219,18.5 1134.6875,18.5 Q1135.1563,18.5 1135.4531,18.7813 Q1135.75,19.0625 1135.75,19.7188 L1135.75,21.2813 Q1135.75,21.9375 1135.4688,22.2188 Q1135.1875,22.5 1134.75,22.5 Q1134.3594,22.5 1134.1094,22.3281 Q1133.8594,22.1563 1133.75,21.7031 Q1133.7031,21.3906 1133.5313,21.2188 Q1133.2188,20.8906 1132.6563,20.7031 Q1132.0938,20.5 1131.5313,20.5 Q1130.8281,20.5 1130.2344,20.7813 Q1129.6563,21.0625 1129.2031,21.6875 Q1128.75,22.3125 1128.75,23.1719 L1128.75,24.0938 Q1128.75,25.125 1129.5938,25.8125 Q1130.4375,26.5 1131.9375,26.5 Q1132.8281,26.5 1133.4531,26.2969 Q1133.8125,26.1875 1134.2188,25.8281 Q1134.4844,25.625 1134.625,25.5625 Q1134.7656,25.5 1134.9375,25.5 Q1135.2656,25.5 1135.5,25.7656 Q1135.75,26.0156 1135.75,26.375 Q1135.75,26.7188 1135.4063,27.125 Q1134.9063,27.7188 1134.1094,28.0469 Q1133.0625,28.5 1131.7813,28.5 Q1130.2813,28.5 1129.0781,27.9063 Q1128.1094,27.4375 1127.4219,26.4219 Q1126.75,25.4063 1126.75,24.2031 L1126.75,23.1094 Q1126.75,21.8594 1127.3438,20.7656 Q1127.9531,19.6719 1129,19.0938 Q1130.0625,18.5 1131.25,18.5 Q1131.9688,18.5 1132.5938,18.75 Q1133.2188,19 1133.75,19.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="78" x="1152.25" y="27.9102">CaminhoTask</text><line style="stroke:#A80036;stroke-width:1.5;" x1="513.5" x2="1836.5" y1="39" y2="39"/><ellipse cx="523.5" cy="50" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="126" x="532.5" y="54.4189">Graph&lt;Morada, Double&gt; g</text><line style="stroke:#A80036;stroke-width:1.5;" x1="513.5" x2="1836.5" y1="60.8359" y2="60.8359"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="520.5" y="68.8359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="995" x="532.5" y="76.2549">Pair&lt;List&lt;Morada&gt;, double[]&gt; caminho(boolean estimativas, Morada moradaFarmacia, List&lt;Morada&gt; moradasEncomendas, double massaEncomendas, Veiculo veiculo, boolean isDrone, MoradaBD moradaBD)</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="520.5" y="82.6719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="625" x="532.5" y="90.0908">List&lt;Morada&gt; gerarCaminho(boolean estimativas, Morada moradaFarmacia, List&lt;Morada&gt; moradasEncomendas, boolean isDrone)</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="520.5" y="96.5078"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="258" x="532.5" y="103.9268">double calcularDistanciaTotal(List&lt;Morada&gt; moradas)</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="520.5" y="110.3438"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="1299" x="532.5" y="117.7627">void adicionarParagensCarregamento(Veiculo veiculo, double massaEncomendas, List&lt;Morada&gt; caminho, List&lt;Morada&gt; listaSimulacao, int indexCaminho, double energiaEstimada, double energiaDisponivel, Map&lt;Integer, Morada&gt; farmacias, boolean isDrone, boolean flag)</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="520.5" y="124.1797"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="724" x="532.5" y="131.5986">double energiaMinimiaCaminho(Veiculo veiculo, double massaEncomendas, List&lt;Morada&gt; caminho, Map&lt;Integer, Morada&gt; farmacias, boolean isDrone)</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="520.5" y="138.0156"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="521" x="532.5" y="145.4346">Morada getFarmaciaMaisPertoConsumo(Morada morada, Map&lt;Integer, Morada&gt; farmacias, boolean isDrone)</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="520.5" y="151.8516"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="871" x="532.5" y="159.2705">boolean temEnergiaParaIrFarmacia(Veiculo veiculo, double massaEntrega, List&lt;Morada&gt; caminho, int indexCaminho, Morada farmMorada, double energiaDisponivel, boolean isDrone)</text><!--MD5=[581290b4268efc5df31366da353b3f8e]
class EstimarConsumoScooterTask--><rect codeLine="13" fill="#FEFECE" filter="url(#f196nc5z98i1b7)" height="61.8359" id="EstimarConsumoScooterTask" style="stroke:#A80036;stroke-width:1.5;" width="694" x="7" y="240"/><ellipse cx="266.25" cy="256" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M268.25,252.5 Q268.4531,252 268.6875,251.75 Q268.9219,251.5 269.1875,251.5 Q269.6563,251.5 269.9531,251.7813 Q270.25,252.0625 270.25,252.7188 L270.25,254.2813 Q270.25,254.9375 269.9688,255.2188 Q269.6875,255.5 269.25,255.5 Q268.8594,255.5 268.6094,255.3281 Q268.3594,255.1563 268.25,254.7031 Q268.2031,254.3906 268.0313,254.2188 Q267.7188,253.8906 267.1563,253.7031 Q266.5938,253.5 266.0313,253.5 Q265.3281,253.5 264.7344,253.7813 Q264.1563,254.0625 263.7031,254.6875 Q263.25,255.3125 263.25,256.1719 L263.25,257.0938 Q263.25,258.125 264.0938,258.8125 Q264.9375,259.5 266.4375,259.5 Q267.3281,259.5 267.9531,259.2969 Q268.3125,259.1875 268.7188,258.8281 Q268.9844,258.625 269.125,258.5625 Q269.2656,258.5 269.4375,258.5 Q269.7656,258.5 270,258.7656 Q270.25,259.0156 270.25,259.375 Q270.25,259.7188 269.9063,260.125 Q269.4063,260.7188 268.6094,261.0469 Q267.5625,261.5 266.2813,261.5 Q264.7813,261.5 263.5781,260.9063 Q262.6094,260.4375 261.9219,259.4219 Q261.25,258.4063 261.25,257.2031 L261.25,256.1094 Q261.25,254.8594 261.8438,253.7656 Q262.4531,252.6719 263.5,252.0938 Q264.5625,251.5 265.75,251.5 Q266.4688,251.5 267.0938,251.75 Q267.7188,252 268.25,252.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="167" x="286.75" y="260.9102">EstimarConsumoScooterTask</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="700" y1="272" y2="272"/><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="700" y1="280" y2="280"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="288"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="668" x="27" y="295.4189">double calculoEstimativaConsumo(boolean estimativas, double massaScooter, double massaEntrega, List&lt;Morada&gt; caminho, boolean print)</text><!--MD5=[7c1f0b44bb4d66e90a89d0de9b441e2a]
class EstimarConsumoDroneTask--><rect codeLine="17" fill="#FEFECE" filter="url(#f196nc5z98i1b7)" height="61.8359" id="EstimarConsumoDroneTask" style="stroke:#A80036;stroke-width:1.5;" width="549" x="736.5" y="240"/><ellipse cx="927.25" cy="256" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M929.25,252.5 Q929.4531,252 929.6875,251.75 Q929.9219,251.5 930.1875,251.5 Q930.6563,251.5 930.9531,251.7813 Q931.25,252.0625 931.25,252.7188 L931.25,254.2813 Q931.25,254.9375 930.9688,255.2188 Q930.6875,255.5 930.25,255.5 Q929.8594,255.5 929.6094,255.3281 Q929.3594,255.1563 929.25,254.7031 Q929.2031,254.3906 929.0313,254.2188 Q928.7188,253.8906 928.1563,253.7031 Q927.5938,253.5 927.0313,253.5 Q926.3281,253.5 925.7344,253.7813 Q925.1563,254.0625 924.7031,254.6875 Q924.25,255.3125 924.25,256.1719 L924.25,257.0938 Q924.25,258.125 925.0938,258.8125 Q925.9375,259.5 927.4375,259.5 Q928.3281,259.5 928.9531,259.2969 Q929.3125,259.1875 929.7188,258.8281 Q929.9844,258.625 930.125,258.5625 Q930.2656,258.5 930.4375,258.5 Q930.7656,258.5 931,258.7656 Q931.25,259.0156 931.25,259.375 Q931.25,259.7188 930.9063,260.125 Q930.4063,260.7188 929.6094,261.0469 Q928.5625,261.5 927.2813,261.5 Q925.7813,261.5 924.5781,260.9063 Q923.6094,260.4375 922.9219,259.4219 Q922.25,258.4063 922.25,257.2031 L922.25,256.1094 Q922.25,254.8594 922.8438,253.7656 Q923.4531,252.6719 924.5,252.0938 Q925.5625,251.5 926.75,251.5 Q927.4688,251.5 928.0938,251.75 Q928.7188,252 929.25,252.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="159" x="947.75" y="260.9102">EstimarConsumoDroneTask</text><line style="stroke:#A80036;stroke-width:1.5;" x1="737.5" x2="1284.5" y1="272" y2="272"/><line style="stroke:#A80036;stroke-width:1.5;" x1="737.5" x2="1284.5" y1="280" y2="280"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="744.5" y="288"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="523" x="756.5" y="295.4189">double estimarConsumoPercurso(Drone drone, double massaEntrega, List&lt;Morada&gt; percurso, boolean print)</text><!--MD5=[49ef38264fc92b8c5000eb35246e7131]
class Constantes--><rect codeLine="21" fill="#FEFECE" filter="url(#f196nc5z98i1b7)" height="117.1797" id="Constantes" style="stroke:#A80036;stroke-width:1.5;" width="181" x="755.5" y="376"/><ellipse cx="809.75" cy="392" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M811.75,388.5 Q811.9531,388 812.1875,387.75 Q812.4219,387.5 812.6875,387.5 Q813.1563,387.5 813.4531,387.7813 Q813.75,388.0625 813.75,388.7188 L813.75,390.2813 Q813.75,390.9375 813.4688,391.2188 Q813.1875,391.5 812.75,391.5 Q812.3594,391.5 812.1094,391.3281 Q811.8594,391.1563 811.75,390.7031 Q811.7031,390.3906 811.5313,390.2188 Q811.2188,389.8906 810.6563,389.7031 Q810.0938,389.5 809.5313,389.5 Q808.8281,389.5 808.2344,389.7813 Q807.6563,390.0625 807.2031,390.6875 Q806.75,391.3125 806.75,392.1719 L806.75,393.0938 Q806.75,394.125 807.5938,394.8125 Q808.4375,395.5 809.9375,395.5 Q810.8281,395.5 811.4531,395.2969 Q811.8125,395.1875 812.2188,394.8281 Q812.4844,394.625 812.625,394.5625 Q812.7656,394.5 812.9375,394.5 Q813.2656,394.5 813.5,394.7656 Q813.75,395.0156 813.75,395.375 Q813.75,395.7188 813.4063,396.125 Q812.9063,396.7188 812.1094,397.0469 Q811.0625,397.5 809.7813,397.5 Q808.2813,397.5 807.0781,396.9063 Q806.1094,396.4375 805.4219,395.4219 Q804.75,394.4063 804.75,393.2031 L804.75,392.1094 Q804.75,390.8594 805.3438,389.7656 Q805.9531,388.6719 807,388.0938 Q808.0625,387.5 809.25,387.5 Q809.9688,387.5 810.5938,387.75 Q811.2188,388 811.75,388.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="64" x="830.25" y="396.9102">Constantes</text><line style="stroke:#A80036;stroke-width:1.5;" x1="756.5" x2="935.5" y1="408" y2="408"/><ellipse cx="766.5" cy="419" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="155" x="775.5" y="423.4189">double VELOCIDADE_SCOOTER</text><ellipse cx="766.5" cy="432.8359" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="96" x="775.5" y="437.2549">double ventoxdrone</text><ellipse cx="766.5" cy="446.6719" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="96" x="775.5" y="451.0908">double ventoydrone</text><ellipse cx="766.5" cy="460.5078" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="105" x="775.5" y="464.9268">double ventoxscooter</text><ellipse cx="766.5" cy="474.3438" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="105" x="775.5" y="478.7627">double ventoyscooter</text><line style="stroke:#A80036;stroke-width:1.5;" x1="756.5" x2="935.5" y1="485.1797" y2="485.1797"/><!--MD5=[4725883143e17e75ce026c91e6b27729]
class GraphAlgorithms--><rect codeLine="29" fill="#FEFECE" filter="url(#f196nc5z98i1b7)" height="89.5078" id="GraphAlgorithms" style="stroke:#A80036;stroke-width:1.5;" width="470" x="1392" y="226"/><ellipse cx="1576.25" cy="242" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1578.25,238.5 Q1578.4531,238 1578.6875,237.75 Q1578.9219,237.5 1579.1875,237.5 Q1579.6563,237.5 1579.9531,237.7813 Q1580.25,238.0625 1580.25,238.7188 L1580.25,240.2813 Q1580.25,240.9375 1579.9688,241.2188 Q1579.6875,241.5 1579.25,241.5 Q1578.8594,241.5 1578.6094,241.3281 Q1578.3594,241.1563 1578.25,240.7031 Q1578.2031,240.3906 1578.0313,240.2188 Q1577.7188,239.8906 1577.1563,239.7031 Q1576.5938,239.5 1576.0313,239.5 Q1575.3281,239.5 1574.7344,239.7813 Q1574.1563,240.0625 1573.7031,240.6875 Q1573.25,241.3125 1573.25,242.1719 L1573.25,243.0938 Q1573.25,244.125 1574.0938,244.8125 Q1574.9375,245.5 1576.4375,245.5 Q1577.3281,245.5 1577.9531,245.2969 Q1578.3125,245.1875 1578.7188,244.8281 Q1578.9844,244.625 1579.125,244.5625 Q1579.2656,244.5 1579.4375,244.5 Q1579.7656,244.5 1580,244.7656 Q1580.25,245.0156 1580.25,245.375 Q1580.25,245.7188 1579.9063,246.125 Q1579.4063,246.7188 1578.6094,247.0469 Q1577.5625,247.5 1576.2813,247.5 Q1574.7813,247.5 1573.5781,246.9063 Q1572.6094,246.4375 1571.9219,245.4219 Q1571.25,244.4063 1571.25,243.2031 L1571.25,242.1094 Q1571.25,240.8594 1571.8438,239.7656 Q1572.4531,238.6719 1573.5,238.0938 Q1574.5625,237.5 1575.75,237.5 Q1576.4688,237.5 1577.0938,237.75 Q1577.7188,238 1578.25,238.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="93" x="1596.75" y="246.9102">GraphAlgorithms</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1393" x2="1861" y1="258" y2="258"/><line style="stroke:#A80036;stroke-width:1.5;" x1="1393" x2="1861" y1="266" y2="266"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1400" y="274"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="279" x="1412" y="281.4189">LinkedList&lt;V&gt; breadthFirstSearch(Graph&lt;V, E&gt; g, V vert)</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1400" y="287.8359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="386" x="1412" y="295.2549">double shortestPath(Graph&lt;V, E&gt; g, V vOrig, V vDest, LinkedList&lt;V&gt; shortPath)</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1400" y="301.6719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="444" x="1412" y="309.0908">List&lt;V&gt; shortestPathMultipleNodes(Graph&lt;V, E&gt; network, List&lt;V&gt; nodes, V vOrig, V vDest)</text><!--MD5=[13569cdf0dfc694d367b0df033cb2ec5]
link CaminhoTask to EstimarConsumoScooterTask--><path codeLine="35" d="M821.76,166.02 C706.21,191.71 584.48,218.77 494.18,238.84 " fill="none" id="CaminhoTask-to-EstimarConsumoScooterTask" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="489.09,239.97,498.7446,241.9164,493.9703,238.8823,497.0043,234.108,489.09,239.97" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[47caa94708c4a4677e49145e063ad644]
link CaminhoTask to EstimarConsumoDroneTask--><path codeLine="36" d="M1104.26,166.22 C1082.32,190.64 1059.27,216.28 1041.59,235.96 " fill="none" id="CaminhoTask-to-EstimarConsumoDroneTask" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="1038.12,239.82,1047.1139,235.8062,1041.4648,236.1035,1041.1675,230.4545,1038.12,239.82" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[794dc7b6d46cca8fbf903f15f3717ebd]
link CaminhoTask to Constantes--><path codeLine="37" d="M1264.79,166.19 C1306.16,211.99 1338.94,269.65 1303,316 C1259.15,372.55 1062.32,406.64 941.72,422.59 " fill="none" id="CaminhoTask-to-Constantes" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="936.75,423.24,946.1976,426.0226,941.7066,422.5829,945.1463,418.092,936.75,423.24" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[9ad0ef790fb6eea5ab1ace1649e7a77f]
link CaminhoTask to GraphAlgorithms--><path codeLine="38" d="M1369.64,166.09 C1418.66,185.88 1469.69,206.49 1513.26,224.08 " fill="none" id="CaminhoTask-to-GraphAlgorithms" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="1518,225.99,1511.148,218.9154,1513.3626,224.1208,1508.1572,226.3353,1518,225.99" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[1e94aa1c1ec6d65706dabd5f792543f1]
link EstimarConsumoScooterTask to Constantes--><path codeLine="40" d="M445.68,302.09 C532.44,330.57 662.18,373.16 750.26,402.07 " fill="none" id="EstimarConsumoScooterTask-to-Constantes" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="755.21,403.7,747.9068,397.0922,750.4595,402.1403,745.4113,404.693,755.21,403.7" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[fa15880e1f8cb91e7947b54ab0f89c8a]
@startuml

class CaminhoTask {
    +Graph<Morada, Double> g
    -Pair<List<Morada>, double[]> caminho(boolean estimativas, Morada moradaFarmacia, List<Morada> moradasEncomendas, double massaEncomendas, Veiculo veiculo, boolean isDrone, MoradaBD moradaBD)
    -List<Morada> gerarCaminho(boolean estimativas, Morada moradaFarmacia, List<Morada> moradasEncomendas, boolean isDrone)
    -double calcularDistanciaTotal(List<Morada> moradas)
    -void adicionarParagensCarregamento(Veiculo veiculo, double massaEncomendas, List<Morada> caminho, List<Morada> listaSimulacao, int indexCaminho, double energiaEstimada, double energiaDisponivel, Map<Integer, Morada> farmacias, boolean isDrone, boolean flag)
    -double energiaMinimiaCaminho(Veiculo veiculo, double massaEncomendas, List<Morada> caminho, Map<Integer, Morada> farmacias, boolean isDrone)
    -Morada getFarmaciaMaisPertoConsumo(Morada morada, Map<Integer, Morada> farmacias, boolean isDrone)
    -boolean temEnergiaParaIrFarmacia(Veiculo veiculo, double massaEntrega, List<Morada> caminho, int indexCaminho, Morada farmMorada, double energiaDisponivel, boolean isDrone)
}

class EstimarConsumoScooterTask {
    -double calculoEstimativaConsumo(boolean estimativas, double massaScooter, double massaEntrega, List<Morada> caminho, boolean print)
}

class EstimarConsumoDroneTask {
    -double estimarConsumoPercurso(Drone drone, double massaEntrega, List<Morada> percurso, boolean print)
}

class Constantes {
    +double VELOCIDADE_SCOOTER
    +double ventoxdrone
    +double ventoydrone
    +double ventoxscooter
    +double ventoyscooter
}

class GraphAlgorithms {
    -LinkedList<V> breadthFirstSearch(Graph<V, E> g, V vert)
    -double shortestPath(Graph<V, E> g, V vOrig, V vDest, LinkedList<V> shortPath)
    -List<V> shortestPathMultipleNodes(Graph<V, E> network, List<V> nodes, V vOrig, V vDest)
}

CaminhoTask - -> EstimarConsumoScooterTask
CaminhoTask - -> EstimarConsumoDroneTask
CaminhoTask - -> Constantes
CaminhoTask - -> GraphAlgorithms

EstimarConsumoScooterTask - -> Constantes

@enduml

PlantUML version 1.2021.00(Sun Jan 10 10:25:05 GMT 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: Cp1252
Language: pt
Country: PT
--></g></svg>